name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        if (Test-Path node_modules) { Remove-Item -Recurse -Force node_modules }
        if (Test-Path package-lock.json) { Remove-Item package-lock.json }
        npm install
        
    - name: Install dependencies (Unix)
      if: runner.os != 'Windows'
      run: |
        rm -rf node_modules package-lock.json
        npm install
      
    - name: Build minecraft-installer
      timeout-minutes: 10
      run: |
        if [ -d "tools/minecraft-installer" ]; then
          npm run build:installer
        else
          echo "minecraft-installer directory not found, skipping build"
        fi
      
    - name: Build application
      run: npm run build
      
    - name: Build Electron app
      timeout-minutes: 15
      run: npx electron-builder
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: naha-mc-helper-${{ github.ref_name }}-${{ matrix.os }}
        path: |
          dist/
          dist-electron-fixed/
        retention-days: 30
        
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          naha-mc-helper-${{ github.ref_name }}-windows-latest/dist-electron-fixed/*.exe
          naha-mc-helper-${{ github.ref_name }}-windows-latest/dist-electron-fixed/*.blockmap
          naha-mc-helper-${{ github.ref_name }}-macos-latest/dist-electron-fixed/*.dmg
          naha-mc-helper-${{ github.ref_name }}-macos-latest/dist-electron-fixed/*.zip
          naha-mc-helper-${{ github.ref_name }}-ubuntu-latest/dist-electron-fixed/*.AppImage
          naha-mc-helper-${{ github.ref_name }}-ubuntu-latest/dist-electron-fixed/*.deb
          naha-mc-helper-${{ github.ref_name }}-ubuntu-latest/dist-electron-fixed/*.rpm
        body: |
          ## NAHA MC Helper ${{ github.ref_name }}
          
          ### What's New
          - Updated to Svelte 5 and Vite 7
          - Auto-updater functionality
          - Improved user interface
          - Bug fixes and performance improvements
          - Multi-platform support (Windows, macOS, Linux)
          
          ### Installation
          **Windows:**
          - Download `NAHA MC Helper Setup 1.0.0.exe` for installer
          - Download `NAHA MC Helper 1.0.0.exe` for portable version
          
          **macOS:**
          - Download `NAHA MC Helper-1.0.0.dmg` for Intel Macs
          - Download `NAHA MC Helper-1.0.0-arm64.dmg` for Apple Silicon Macs
          
          **Linux:**
          - Download `NAHA MC Helper-1.0.0.AppImage` for universal Linux
          - Download `NAHA MC Helper-1.0.0.deb` for Debian/Ubuntu
          - Download `NAHA MC Helper-1.0.0.rpm` for Red Hat/Fedora
          
          ### Auto-Update
          The application will automatically check for updates and notify you when new versions are available.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
